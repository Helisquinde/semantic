(function() {
  var Thing, authenticate, filter, gBrowse, header, home, list, sidebar;

  authenticate = {
    controller: function(p1, p2) {
      return {
        runAuth: function(p1, p2) {
          return m.request({
            method: "POST",
            url: "scripts/scrypt_pass.py?params=" + p1 + "," + p2
          });
        }
      };
    },
    view: function(ctrl) {
      return m('div', ctrl.runAuth());
    }
  };

  gBrowse = {};

  gBrowse.controller = function() {};

  gBrowse.view = function() {
    return [
      header.view(), m("div", {
        id: 'wrapper'
      }, [
        m('div', {
          id: 'sidebar-wrapper'
        }), m('div', {
          id: 'page-content-wrapper'
        })
      ]), sidebar.view(list.controller)
    ];
  };

  header = {};

  header.links = [
    {
      title: "Home",
      url: "/home"
    }, {
      title: "Group Browse",
      url: "/gbrowse"
    }, {
      title: "Group Analyses",
      url: "/groups"
    }, {
      title: "VF and AMR",
      url: "/factors"
    }
  ];

  header.controller = function() {};

  header.view = function() {
    var link;
    return m("div", {
      "class": 'container-fluid'
    }, [
      m("nav", {
        "class": 'navbar navbar-default navbar-fixed-top',
        role: 'navigation'
      }, [
        m("div", {
          "class": 'navbar-header'
        }, [
          m("a", {
            "class": "navbar-brand",
            href: "/superphy/home",
            config: m.route
          }, "SuperPhy")
        ]), m("ul", {
          "class": 'nav navbar-nav'
        }, [
          (function() {
            var i, len, ref, results;
            ref = header.links;
            results = [];
            for (i = 0, len = ref.length; i < len; i++) {
              link = ref[i];
              results.push(m("li", m("a", {
                href: link.url,
                config: m.route
              }, link.title)));
            }
            return results;
          })(), m("li", {
            "class": "dropdown"
          }, [
            m("a", {
              href: "",
              role: "button",
              "class": "dropdown-toggle",
              'data-toggle': "dropdown"
            }, "My Data", [
              m("b", {
                "class": "caret"
              })
            ])
          ])
        ])
      ])
    ]);
  };

  home = {};

  home.controller = function() {};

  home.view = function() {
    return [
      header.view(), m("div", {
        "class": 'container',
        id: 'home-beta'
      }, [
        m("div", {
          "class": 'row'
        }, [
          m("div", {
            "class": 'well center-block'
          }, [
            m("p", {
              "class": 'text-center'
            }, [
              m("span", {
                "class": 'text-info beta-release'
              }, "Beta Release"), " Some features are still under development and may not be fully functional."
            ])
          ])
        ]), m("div", {
          "class": 'row superphy-image'
        }, [
          m("img", {
            src: 'images/superphy_logo_with_title.png'
          }), m("p", {
            "class": 'superphy-image'
          }, 'NEXT-LEVEL PHYLOGENETIC AND EPIDEMIOLOGICAL ANALYSIS OF PATHOGENS')
        ]), m("div", {
          "class": 'row well'
        }, [m("p", 'A user-friendly, integrated platform for the predictive genomic analyses of ', [m("em", 'Escherichia coli')]), m("p", 'Provides near real-time analyses of thousands of genomes using novel computational approaches.'), m("p", 'Generates results that are understandable and useful to a wide community of users.')]), m("div", {
          "class": 'row'
        }, [
          m("button", {
            "class": 'btn btn-danger btn-lg center-block'
          }, "INTRODUCTION")
        ]), m("div", {
          "class": 'row text-center'
        }, [m("p", 'For more information or to discuss possible collaboration, please contact:', [m("p", [m("ul", [m("li", 'Dr. Vic Gannon: vic.gannon@phac-aspc.gc.ca')])])])])
      ])
    ];
  };

  m.route(document.body, "/", {
    "/": home,
    "/home": home,
    '/gbrowse': gBrowse,
    '/authenticate': authenticate
  });

  Thing = {
    list: function() {
      return ['one', 'two', 'three'];
    }
  };

  sidebar = {
    controller: function() {
      this.list = new list.controller({
        visible: function() {
          return item.name.indexOf(this.filter.searchTerm()) > -1;
        }
      });
      return this.filter = new filter.controller();
    },
    view: function(ctrl) {
      return m(".row", [m(".col-md-2", [filter.view(ctrl.filter)]), m(".col-md-10", [list.view(ctrl.list)])]);
    }
  };

  filter = {
    controller: function() {
      return this.searchTerm = m.prop("");
    },
    view: function() {
      return m("input", {
        oninput: m.withAttr("value", ctrl.searchTerm)
      });
    }
  };

  list = {
    controller: function() {
      this.items = Thing.list();
      return this.visible = options.visible;
    },
    view: function(ctrl) {
      var item;
      return m("table", [
        (function() {
          var i, len, ref, results;
          ref = ctrl.items().filter(ctrl.visible);
          results = [];
          for (i = 0, len = ref.length; i < len; i++) {
            item = ref[i];
            results.push(m("tr", [m("td", item.id), m("td", item.name)]));
          }
          return results;
        })()
      ]);
    }
  };

}).call(this);
